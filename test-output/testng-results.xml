<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="4" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default Suite" duration-ms="1750" started-at="2020-07-04T10:24:17Z" finished-at="2020-07-04T10:24:18Z">
    <groups>
    </groups>
    <test name="InterfaceFrame" duration-ms="1750" started-at="2020-07-04T10:24:17Z" finished-at="2020-07-04T10:24:18Z">
      <class name="com.cases.demo">
        <test-method status="PASS" signature="Test(java.util.Map)[pri:0, instance:com.cases.demo@2cb4c3ab]" name="Test" duration-ms="562" started-at="2020-07-04T10:24:18Z" data-provider="excelData" finished-at="2020-07-04T10:24:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{requesturl=http://123.56.65.197:8080/mybatis/user/register, RequestMethod=post, RequestData={"userName":"zhangsan","password":"123456","age":13}, RelyData=, ResponseCode=200.0, ResponseData=, DataStore={"request":["serviceType","clientSource"],"response":["code"]}, CheckPoint={"msg":"注册失败：用户名已存在","code":-1,"suc":false}, Active=y, Status=faild, ErrorInfo={'code': u'01'}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test -->
        <test-method status="FAIL" signature="Test(java.util.Map)[pri:0, instance:com.cases.demo@2cb4c3ab]" name="Test" duration-ms="47" started-at="2020-07-04T10:24:18Z" data-provider="excelData" finished-at="2020-07-04T10:24:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{requesturl=http://123.56.65.197:8080/mybatis/user/login, RequestMethod=post, RequestData={"userName":"zhangsan","password":"123456"}, RelyData=, ResponseCode=200.0, ResponseData={"username": "wcx", "code": "01"}, DataStore={"request":["username","password"],"response":["code"]}, CheckPoint={"msg":"注册失败：用户名已存在","code":-1,"suc":false}, Active=y, Status=Pass, ErrorInfo=}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [登录成功] but found [注册失败：用户名已存在]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [登录成功] but found [注册失败：用户名已存在]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.cases.demo.Test(demo.java:75)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73)
at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test -->
        <test-method status="PASS" signature="Test(java.util.Map)[pri:0, instance:com.cases.demo@2cb4c3ab]" name="Test" duration-ms="110" started-at="2020-07-04T10:24:18Z" data-provider="excelData" finished-at="2020-07-04T10:24:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{requesturl=http://123.56.65.197:8080/mybatis/user/getUserList, RequestMethod=get, RequestData=, RelyData=, ResponseCode=200.0, ResponseData=, DataStore=, CheckPoint={
    "msg": "查询成功",
    "code": 1,}, Active=, Status=, ErrorInfo=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test -->
        <test-method status="FAIL" signature="Test(java.util.Map)[pri:0, instance:com.cases.demo@2cb4c3ab]" name="Test" duration-ms="109" started-at="2020-07-04T10:24:18Z" data-provider="excelData" finished-at="2020-07-04T10:24:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{requesturl=http://123.56.65.197:8080/mybatis/user/showUser, RequestMethod=get, RequestData={"userName":"nem"}, RelyData=, ResponseCode=200.0, ResponseData=, DataStore=, CheckPoint={
    "msg": "查询成功",
    "code": 1,}, Active=, Status=, ErrorInfo=}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [成功] but found [查询成功]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [成功] but found [查询成功]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.cases.demo.Test(demo.java:75)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73)
at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test -->
      </class> <!-- com.cases.demo -->
    </test> <!-- InterfaceFrame -->
  </suite> <!-- Default Suite -->
</testng-results>
